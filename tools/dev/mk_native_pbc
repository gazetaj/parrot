#!/bin/sh

# sh tools/dev/mk_native_pbc [--noconf]
#
# Generate/update t/native_pbc/*_*.pbc
# This should only be run on known systems to regenerate the native pbcs.
# Better do not try that on mingw, use cygwin instead.
#
# NOTE:  For _2/_5/_8 this will need a compiler with long double support.
# NOTE2: Installing ccache speeds this process up considerably.

#  _1   i386 32 bit opcode_t, 32 bit intval   (linux-gcc-ix86, freebsd-gcc, cygwin)
#  _2   i386 32 bit opcode_t, 32 bit intval, 12 bit long double (linux-gcc-ix86)
#  _3   PPC BE 32 bit opcode_t, 32 bit intval (darwin-ppc)
#  _4   x86_64 double float 64 bit opcode_t   (linux-gcc-x86_64, solaris-cc-64int)
#  _5   x86_64 16 byte long double 64 bit opcode_t (linux-gcc-x86_64, solaris-cc-64int)
#  _6   big-endian 64-bit                     (sparc, irix or similar)
#  _7   big-endian 64-bit 16-byte long-double (sparc64, irix, mips or similar)
#  _8   (skipped) i386 32 bit opcode_t, 32 bit intval, 4-byte float --floatval=float
#  _9   (skipped) big-endian 32 bit opcode_t, 4 byte intval, 4 byte single float
#                 (darwin or debian/ppc with --floatval="float")


#tests:
# t/native_pbc/testdata/integer.pasm
# t/native_pbc/testdata/number.pasm
# t/native_pbc/testdata/string.pasm

# check 32/64 bit, endianess, hugefloat
i_id=
n_id=
enable_long_double=
conf=
exe=

byteorder=$(./parrot_config byteorder)
ptrsize=$(./parrot_config ptrsize)
intvalsize=$(./parrot_config intvalsize)
# 4, 8, 12 or 16 on intel
numvalsize=$(./parrot_config numvalsize)

if [ "$(./parrot_config osname)" = "cygwin" ]; then
    exe=.exe
fi
if [ "$ptrsize" = "4" ]
then
    if [ "$intvalsize" != "4" ]
        echo "Sorry, unsupported perl - probably using use64bitint. ptrsize/intvalsize mismatch."
	exit
    then
    fi
    if [ "$byteorder" = "1234" ]
    then
        n_id=${numvalsize}_le
	i_id=4_le
        if [ "$numvalsize" = "12" ]
        then
            echo "2: i386 32-bit opcode_t, 32-bit intval, 12-byte long double"
        else
            if [ "$numvalsize" = "4" ]
            then
                echo "8: i386 32-bit opcode_t, 32-bit intval, 4-byte float"
            else
                id=1
                echo "1: i386 32-bit opcode_t, 32-bit intval, 8-byte double"
                # try --floatval="long double" and see if that makes 12
                enable_long_double=1
                # force double on 2nd run not to default to long double
                conf=" --floatval=double"
            fi
        fi
    else
	i_id=4_be
        n_id=${numvalsize}_be
        if [ "$byteorder" = "4321" ]
        then
            echo "3: PPC BE 32 bit opcode_t, 32 bit intval"
        else
            echo "Sorry, unsupported perl - parrot ptrsize mismatch."
            exit
        fi
    fi
else
    if [ "$ptrsize" = "8" ]
    then
        if [ "$byteorder" = "12345678" ]
        then
            n_id=${numvalsize}_le
	    i_id=8_le
            if [ "$numvalsize" = "8" ]
            then
                echo "4: x86_64 double float 64 bit opcode_t, 8-byte double"
                # try --floatval="long double" and see if that makes 16
                enable_long_double=1
                # force double on 2nd run not to default to long double
                conf=" --floatval=double"
            else
                echo "5: x86_64 64 bit opcode_t, 16-byte long double"
            fi
        else
            n_id=${numvalsize}_be
            if [ "$numvalsize" = "8" ]
            then
                echo "6: big-endian 64-bit"
                # try --floatval="long double" and see if that makes 16
                enable_long_double=1
                # force double on 2nd run not to default to long double
                conf=" --floatval=double"
            else
                echo "7: ppc/BE 64 bit opcode_t, 16-byte long double"
            fi
        fi
    else
        echo "unsupported ptrsize $ptrsize"
        exit 1
    fi
fi

echo ""
if [ "$1" != "--noconf" ]; then
    make -s prog-clean
    perl Configure.pl --debugging $conf --nomanicheck
fi
tail myconfig
make -s || exit 1

for T in integer number string
do
    ./parrot -o t/native_pbc/${T}_${id}.pbc t/native_pbc/testdata/${T}.pasm && \
	echo "t/native_pbc/${T}_${id}.pbc updated"
done

make pbc_dump$exe
./pbc_dump -h t/native_pbc/number_${id}.pbc

perl t/harness t/native_pbc/integer.t t/native_pbc/number.t t/native_pbc/string.t

if [ "$enable_long_double" = "1" ]; then
    if [ "$1" = "--noconf" ]; then
      echo "Hmm. You have no long double, and we want to try --floatval=long double"
      echo "However for this you must reconfigure your parrot and you gave --noconf"
      exit
    fi
    make -s prog-clean
    perl Configure.pl --floatval="long double" --nomanicheck
    tail myconfig
    make -s || exit 1
    hugefloatvalsize=$(./parrot_config hugefloatvalsize)
    numvalsize=$(./parrot_config numvalsize)
    #if [ "hugefloatvalsize" = "12" ]; then echo "Only 12 byte long double. Sorry"; exit; fi
    #if [ "numvalsize" = "12" ]; then echo "Only 12 byte double. Sorry"; exit; fi
    # 1+2, 4+5, 6+7
    if [ "${byteorder:0:2]" = "12" ]; then
        M=${numvalsize}_le
    else
        M=${numvalsize}_be
    fi
    ./parrot -o t/native_pbc/number_${M}.pbc t/native_pbc/testdata/number.pasm \
	&& echo "t/native_pbc/number_${M}.pbc updated"
    make pbc_dump$exe
    ./pbc_dump -h t/native_pbc/number_${M}.pbc

    perl t/harness t/native_pbc/integer.t t/native_pbc/number.t t/native_pbc/string.t
fi

echo "You should run these commands to update the PBC files in your repo:"
echo "cd t/native_pbc"
echo "git add *.pbc"
echo "git commit -m 'native_pbc platform updates'"
